/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include <cstdint>
#include "system_stm32f1xx.h"
#include "stm32f1xx_hal.h"

#include "cmsis_os.h"
#include <set>
#include <stdio.h>
#include "thread.hpp"
#include "ticks.hpp"
#include "semaphore.hpp"


#include "peripherals/can.hpp"
#include "hardware/StatusLeds.hpp"
#include "canWatchdog.hpp"
#include "peripherals/usart3_simpel/usart3.hpp"

#include "apps/JalousieAppEsp.hpp"



using namespace cpp_freertos;
using namespace std;


int main(void)
{
	SystemInit();
	HAL_Init();

	__HAL_RCC_GPIOA_CLK_ENABLE();
	__HAL_RCC_GPIOB_CLK_ENABLE();
	__HAL_RCC_GPIOC_CLK_ENABLE();
	__HAL_RCC_GPIOD_CLK_ENABLE();
	__HAL_RCC_GPIOE_CLK_ENABLE();
	__HAL_RCC_AFIO_CLK_ENABLE();

	UniqueId uid;
	uid.setToProcessorID();
	/*
	if(uid==UniqueId(98172722, 808997681, 1125394742)) { // Schaltmodul EG
		can_id=0x00100000;
	}
	if(uid==UniqueId(98238258, 808997681, 1125402933)) { // Tastermodul EG
		can_id=0x00100100;
	}
	if(uid==UniqueId(97910578, 808997681, 1125404981)) { // Schaltmodul OG
		can_id=0x00100200;
	}
	if(uid==UniqueId(98107186, 808997681, 1125410105)) { // Schaltmodul KG
		can_id=0x00100300;
	}
	if(uid==UniqueId(470252033, 2370060148, 2892143625)) { // Experimentierplatine Arbeitszimmer
		can_id=0x00100400;
	}
	if(uid==UniqueId(97910578, 808997681, 1125397302)) { // Experimentierplatine Arbeitszimmer
		//can_id=0x00100500;
		can_id=0x500;
	}
	*/

	CanThread *canThread= new CanThread();
	CanWatchdog *canWatchdog = new CanWatchdog(canThread, &uid);
	JalousieAppEsp *app = new JalousieAppEsp(canThread, &uid, canWatchdog);

	Thread::StartScheduler();

    /* Loop forever */
	for(;;);
}
